#lang sicp
(define (square x) (* x x))
(define (sum-of-squares x y)
  (+ (square x) (square y)))
(define (sq-sum-of-two-largest x y z)
  (cond ((and (>= x y) (>= y z)) (sum-of-squares x y))
        ((and (>= x y) (>= z y)) (sum-of-squares x z))
        (else (sum-of-squares y z))))
(sq-sum-of-two-largest 1 2 3)
; prints 13

(sq-sum-of-two-largest 4 2 1)
; prints 20

(sq-sum-of-two-largest 3 5 4)
; prints 41

(sq-sum-of-two-largest 3 5 5)
; prints 50

  
  
                 
