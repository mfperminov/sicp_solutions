#lang sicp
; A procedure that computes f by means of a recursive process

(define (rec-f n)
  (cond ((< n 3) n)
        (else (+ (rec-f (- n 1))
                 (* 2 (rec-f (- n 2)))
                 (* 3 (rec-f (- n 3)))))))
(rec-f 1)
(rec-f 2)
(rec-f 3)
(rec-f 4)
(rec-f 5)
(rec-f 20)
; A procedure that computes f by means of iterative process

(define (iter-f n)
  (inner-iter-f 1 2 4 n n))
(define (inner-iter-f a b c count n)
  (cond
    ((= n 1) a)
    ((= n 2) b)    
    ((= 3 count) c)    
    (else (inner-iter-f b c (+ (* 3 a) (* 2 b) (* 1 c)) (- count 1)  n))))
(iter-f 1)
(iter-f 2)
(iter-f 3)
(iter-f 4)
(iter-f 5)
(iter-f 20)





 



